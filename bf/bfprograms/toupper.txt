

    read the first char this will act like a do while
    ,


    make 2 copies of it in 2 and 3
    [>+>+<<-]

    skip to 4
    >>>

    put a 96 in 4
    >+++++[<+++++[<++++>-]>-]<<----

    3 = y
    4 = x
    5 = t0
    6 = t1
    7 = t3
    8 = t4

    put a 1 in t2
    >>>+

    move back to y
    <<<<<

    put y in t0 an t1
    [>>+>+<<<-]


    move to t1
    >>>

    reload Y from t1
    [<<<+>>>-]

    move to x
    <<

    load t1 from X
    [>>+<<-]

    move to t1
    >>

    subtract 1 until we hit a zero
    we just move to t2 and decrement
    seems like putting a 1 in t2 was as pointless as these brackets
    [>-]

    move to t3
    >
















    subtract 3 and the 5 to see who gets to zero first
    [
        [
            decrement 3
            -
            [
                if it's non zero decrement 5
                >>-

                move to 4 to break out
                <

            ]

            we are at a zero and its either 3 or 4
            move back to either 2 or 3
            <

            [

            ]

                < go back to the 3 which we know is zero
            ]
            decrement 4
            >-
        ]

        move back to 3
        <
        [
            if 3 is non-zero then we'll toupper 2

            create a 32 in 4
            >>++++++[<+++++>-]<++

            decrement 2 32 times
            [<<+>>-]<<.

            clear 2
            [-]

            move back to 3
            >
        ]

        move to 2
        <

        [
            if 2 is non zero then print it
            .
        ]

    ]






